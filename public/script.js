"use strict";function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_unsupportedIterableToArray(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _iterableToArrayLimit(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,a,i=[],o=!0,l=!1;try{for(r=r.call(e);!(o=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);o=!0);}catch(e){l=!0,a=e}finally{try{o||null==r.return||r.return()}finally{if(l)throw a}}return i}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _createForOfIteratorHelper(e,t){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,a=function(){};return{s:a,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,l=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){l=!0,i=e},f:function(){try{o||null==r.return||r.return()}finally{if(l)throw i}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}var DynamicAdaptive=function(){function e(){_classCallCheck(this,e),this.adaptiveElems=document.querySelectorAll("[data-adaptive]"),this.bundleMap=new Map,this.onSetAdaptive=this.onSetAdaptive.bind(this);var t,r=_createForOfIteratorHelper(this.adaptiveElems);try{for(r.s();!(t=r.n()).done;){var n=t.value;this.bundleMap.set(n,{parent:n.parentNode,index:this.getIndexOfChild(n)})}}catch(e){r.e(e)}finally{r.f()}window.addEventListener("resize",this.onSetAdaptive)}return _createClass(e,[{key:"onSetAdaptive",value:function(){var e,t=document.documentElement.clientWidth,r=_createForOfIteratorHelper(this.adaptiveElems);try{for(r.s();!(e=r.n()).done;){var n=e.value,a=this.getInitStateOfElem(n),i=a.parent,o=a.index,l=_slicedToArray(n.dataset.adaptive.split(" "),2),s=l[0],u=l[1],c=document.querySelector(u);if(s=parseInt(s),!c)return;t<=s?c.append(n):o-1<0?i.prepend(n):i.children[o-1].after(n)}}catch(e){r.e(e)}finally{r.f()}}},{key:"getIndexOfChild",value:function(e){return Array.from(e.parentNode.children).indexOf(e)}},{key:"getInitStateOfElem",value:function(e){return this.bundleMap.get(e)}},{key:"init",value:function(){this.onSetAdaptive()}}]),e}();(new DynamicAdaptive).init();var burgerEl=document.querySelector(".js-burger"),menuEl=document.querySelector(".js-menu");function onToggleMenuBtnClick(){if("true"===this.getAttribute("aria-expanded"))return menuEl.classList.remove("show"),this.classList.remove("active"),this.setAttribute("aria-label","открыть меню"),void this.setAttribute("aria-expanded","false");menuEl.classList.add("show"),this.classList.add("active"),this.setAttribute("aria-label","закрыть меню"),this.setAttribute("aria-expanded","true")}burgerEl.addEventListener("click",onToggleMenuBtnClick);var feedbackLinkEl=document.querySelector(".js-feedback-link"),feedbackFormEl=document.querySelector(".js-feedback-form"),formCloseEl=document.querySelector(".js-form-close"),feedbackInputEl=document.querySelector(".js-feedback-input"),submitPopupEl=document.querySelector(".js-submit-popup"),popupTextEl=document.querySelector(".js-popup-text"),popupCloseEl=document.querySelector(".js-popup-close"),validation=new JustValidate(".js-feedback-form"),maskOptions={mask:"+{7}(000)000-00-00"},isFormValid=!1;function onToggleFeedbackFormLinkClick(e){if(e.preventDefault(),"true"===feedbackLinkEl.getAttribute("aria-expanded"))return feedbackFormEl.classList.remove("show"),void feedbackLinkEl.setAttribute("aria-expanded","false");feedbackFormEl.classList.add("show"),feedbackLinkEl.setAttribute("aria-expanded","true")}function onCloseFeebackFormClick(e){(!e.target.classList.contains("js-feedback-link")&&!e.target.closest(".js-feedback-form")||e.target.closest(".js-form-close"))&&(feedbackFormEl.classList.remove("show"),feedbackLinkEl.setAttribute("aria-expanded","false"))}IMask(feedbackInputEl,maskOptions),validation.addField("#policy-confirm",[{rule:"required",errorMessage:"Это поле обязательно"}]).addField("#phone-number",[{rule:"required",errorMessage:"Пожалуйста, введите номер телефона"}]).onFail((function(){return isFormValid=!1})).onSuccess((function(){return isFormValid=!0})),feedbackLinkEl.addEventListener("click",onToggleFeedbackFormLinkClick),window.addEventListener("click",onCloseFeebackFormClick),feedbackFormEl.addEventListener("submit",(function(e){if(e.preventDefault(),isFormValid){feedbackFormEl.classList.remove("show"),feedbackLinkEl.setAttribute("aria-expanded","false"),popupTextEl.textContent="Спасибо! Ваша заявка отправлена",submitPopupEl.classList.add("show","success");var t=setTimeout((function(){return submitPopupEl.classList.remove("show")}),2e3);popupCloseEl.addEventListener("click",(function(){clearTimeout(t),submitPopupEl.classList.remove("show")})),feedbackFormEl.reset()}}));var bulletsBtnEl=document.querySelector(".js-bullets-btn"),bulletsEl=document.querySelector("#bullets");function onToggleBulletsBtnClick(){if("true"===this.getAttribute("aria-expanded"))return bulletsEl.classList.remove("show"),this.classList.remove("active"),this.setAttribute("aria-label","показать преимущества"),void this.setAttribute("aria-expanded","false");bulletsEl.classList.add("show"),this.classList.add("active"),this.setAttribute("aria-label","скрыть преимущества"),this.setAttribute("aria-expanded","true")}bulletsBtnEl.addEventListener("click",onToggleBulletsBtnClick);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
